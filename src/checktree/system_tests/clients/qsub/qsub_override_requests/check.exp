#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
#  Portions of this software are Copyright (c) 2023-2024 HPC-Gridware GmbH
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name 
global check_category 
global check_description 
global check_needs
global check_functions 
global check_root_access_needs

#set check_root_access_needs "yes"

# define test's name and run level descriptions
set check_name            "qsub_override_requests"
set check_category        "SUBMISSION VERIFIED"
set check_description(0)  "submit a job with command line parameters that should override the default parameters in sge_request"

# define test's dependencies
set check_needs           "init_core_system" 

# setup and cleanup functions
set check_setup_function client_override_setup
set check_cleanup_function client_override_cleanup

# array with information about existing files/directories
global file_exists
set file_exists(sge_request) "0"

# define test's procedure order
set check_functions {}
lappend check_functions "client_override_test1"

# -------- local test procedures: initialization------------------------------

proc client_override_setup {} {
   global ts_config CHECK_USER

   # needn't backup the original sge_request file - the template is in $SGE_ROOT/util
   # alter sge_request file 
   append_to_sge_request_file "-q all.q@someHostName"
}

proc client_override_cleanup {} {
   global ts_config CHECK_USER

   # restore sge_request file
   restore_sge_request_file

   # cleanup
   delete_all_jobs
   wait_for_end_of_all_jobs
}

proc client_override_test1 {} {
   global ts_config

   set hostname [host_conf_get_suited_hosts]
   set expected_queue "all.q@$hostname"   
   set jobargs "-q $expected_queue $ts_config(product_root)/examples/jobs/sleeper.sh 30" 
   set job_id [submit_job $jobargs]
   get_qstat_j_info $job_id
   regexp {.*@(.*)} $qstat_j_info(hard_queue_list) match result_host
   set result_host [get_short_hostname $result_host]
   
   if {[string compare "$result_host" "$hostname"] != 0} {
      set error_text "qsub did not set the correct queue: $hostname \n"
      ts_log_severe "overriding of default script file failed. Got $result_host expected $hostname"
   }
}
