#!/usr/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
#  Portions of this software are Copyright (c) 2024 HPC-Gridware GmbH
#
##########################################################################
#___INFO__MARK_END__

# list of deprecated symbols (variables, procedures)
set deprecated {check_errno check_errstr set_error}
lappend deprecated "CHECK_TESTSUITE_ROOT"
lappend deprecated "CHECK_CHECKTREE_ROOT"
lappend deprecated "CHECK_SCRIPT_FILE_DIR"
lappend deprecated "CHECK_TCL_SCRIPTFILE_DIR"
lappend deprecated "CHECK_ARCH"
lappend deprecated "CHECK_PRODUCT_ROOT"
lappend deprecated "CHECK_CORE_EXECD"
lappend deprecated "CHECK_CORE_MASTER"
lappend deprecated "CHECK_HOST"
lappend deprecated "CHECK_SOURCE_DIR"
lappend deprecated "CHECK_SOURCE_CVS_RELEASE"
lappend deprecated "CHECK_SOURCE_HOSTNAME"
lappend deprecated "CHECK_DIST_INSTALL_OPTIONS"
lappend deprecated "CHECK_SUBMIT_ONLY_HOSTS"


# build a list of files to analyze (.tcl and .exp)
set files ""
set subdirs [glob -nocomplain -directory . -types d . * */* */*/* */*/*/* */*/*/*/* */*/*/*/*/*]
puts "searching for code in [llength $subdirs] directories"

foreach dir $subdirs {
   if {[string first "CVS" $dir] == -1 } {
      append files [glob -nocomplain -- "$dir/*.tcl"]
      append files " "
      append files [glob -nocomplain -- "$dir/*.exp"]
      append files " "
   }
}

set files [lsort -dictionary $files]
puts "analyzing [llength $files] files"

# analyze all files, store results
set max_filename 10
foreach file $files {
   # don't analyze this script
   if {[file tail $file] == "find_deprecated.exp"} {
      continue
   }

   # grep for all deprecated, store result
   set result($file) 0
   foreach dep $deprecated {
      set catch_return [catch {exec grep $dep $file} catch_output]
      if {$catch_return == 0} {
         set hits [llength [split $catch_output "\n"]]
      } else {
         set hits 0
      }
      set result($file,$dep) $hits
      incr result($file) $hits
   }

   # calculate the max file name length of affected files
   if {$result($file) > 0} {
      # get max file name
      set len [string length $file]
      if {$len > $max_filename} {
         set max_filename $len
      }
   }
}

# output
puts ""
# header line
puts [format "%-${max_filename}s %3s %s" "file" "num" "hits"]

# one line for all affected files
foreach file $files {
   # don't analyze this script
   if {[file tail $file] == "find_deprecated.exp"} {
      continue
   }

   if {$result($file) > 0} {
      puts -nonewline [format "%-${max_filename}s %3d " $file $result($file)]
      foreach dep $deprecated {
         if {$result($file,$dep) > 0} {
            puts -nonewline $dep
            puts -nonewline " "
         }
      }
      puts ""
   }
}
